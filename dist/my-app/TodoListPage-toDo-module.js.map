{"version":3,"sources":["webpack:///./src/app/TodoListPage/styles.css","webpack:///./src/app/TodoListPage/toDo-routing.module.ts","webpack:///./src/app/TodoListPage/toDo.component.html","webpack:///./src/app/TodoListPage/toDo.component.ts","webpack:///./src/app/TodoListPage/toDo.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,wBAAwB,gCAAgC,oBAAoB,kBAAkB,uBAAuB,sBAAsB,iBAAiB,gBAAgB,KAAK,eAAe,0BAA0B,0BAA0B,kBAAkB,iBAAiB,kBAAkB,KAAK,gBAAgB,gBAAgB,kBAAkB,KAAK,oBAAoB,0BAA0B,8BAA8B,cAAc,qBAAqB,eAAe,8BAA8B,KAAK,sBAAsB,uBAAuB,yBAAyB,mBAAmB,8BAA8B,uBAAuB,KAAK,kBAAkB,yBAAyB,gBAAgB,mBAAmB,uCAAuC,KAAK,yBAAyB,oCAAoC,iCAAiC,KAAK,8BAA8B,uBAAuB,gBAAgB,iBAAiB,iBAAiB,kBAAkB,mBAAmB,qBAAqB,sBAAsB,uBAAuB,iBAAiB,8BAA8B,8BAA8B,kCAAkC,sCAAsC,gBAAgB,qBAAqB,iCAAiC,kCAAkC,KAAK,WAAW,0CAA0C,iBAAiB,0BAA0B,kBAAkB,gBAAgB,uBAAuB,oBAAoB,6BAA6B,sBAAsB,KAAK,UAAU,0CAA0C,gCAAgC,iBAAiB,0BAA0B,mBAAmB,gBAAgB,oBAAoB,qBAAqB,sBAAsB,+BAA+B,sBAAsB,KAAK,WAAW,0CAA0C,iBAAiB,0BAA0B,gCAAgC,kBAAkB,gBAAgB,oBAAoB,qBAAqB,sBAAsB,+BAA+B,sBAAsB,mBAAmB,0BAA0B,mBAAmB,4CAA4C,gDAAgD,C;;;;;;;;;;;;;;;;;;;;;;;ACA/sE;AACc;AAEN;AAEjD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;QACxB,QAAQ,EAAE,EAGT;KACF;CACF,CAAC;AAOF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAL7B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,SAAS,EAAE,EAAE;SACd,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACrB9B,iFAAiF,+YAA+Y,YAAY,iI;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1b;AAIgB;AAClB;AACO;AAWvD;IAUE,uBAAoB,IAAgB,EAAS,MAAc,EAAU,KAAqB;QAAtE,SAAI,GAAJ,IAAI,CAAY;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAT1F,aAAQ,GAAG,IAAI,wDAAS,CAAC;YACvB,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACjC,CAAC,CAAC;QACL,WAAM,GAAG;YACL,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;aACrC;SACJ;QACC,aAAQ,GAAG,EAAE,CAAC;IAC+E,CAAC;IAE9F,gCAAQ,GAAR;QAAA,iBAuBD;QApBI,EAAE,EAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;YAEzC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAEhC,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,GAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YAE9F,KAAI,CAAC,QAAQ,GAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QAI1C,CAAC,EAAC,aAAG;YAEL,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAGnC,CAAC,CAAC,CAAC;IACL,CAAC;IAKD,+BAAO,GAAP;QAAA,iBAsBC;QArBA,IAAI,IAAI,GAAE;YAEP,QAAQ,EAAE,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC;YAC5C,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC;SAEjD,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YAEjE,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAGzC,CAAC,EAAC,aAAG;YAEL,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAGnC,CAAC,CAAC,CAAC;IAIL,CAAC;IAEK,4BAAI,GAAJ,UAAK,CAAC;QAAN,iBAuBC;QArBC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAEf,IAAI,IAAI,GAAC;YACP,QAAQ,EAAE,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC;YAC5C,IAAI,EAAC,CAAC;SAER;QACA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YAElE,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAI5C,CAAC,EAAC,aAAG;YAEL,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAGnC,CAAC,CAAC,CAAC;IAGF,CAAC;IAEP,8BAAM,GAAN;QAEE,cAAc,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAEjC,CAAC;IA9FY,aAAa;QAPzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAKrB,CAAC;yCAW0B,+DAAU,EAAiB,sDAAM,EAAiB,8DAAc;OAV/E,aAAa,CAgGzB;IAAD,oBAAC;CAAA;AAhGyB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBe;AAEiB;AACQ;AACjB;AACO;AAEX;AAW7C;IAAA;IAAyB,CAAC;IAAb,UAAU;QAVtB,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,sEAAiB;gBACvB,0DAAW;gBACX,4DAAY;gBACZ,kEAAmB;gBACnB,qEAAgB,CAAC;YACrB,YAAY,EAAE,CAAC,6DAAa,CAAC;YAC7B,eAAe,EAAE,EAAE;YACnB,SAAS,EAAE,EAAE;SACd,CAAC;OACW,UAAU,CAAG;IAAD,iBAAC;CAAA;AAAH","file":"TodoListPage-toDo-module.js","sourcesContent":["module.exports = \".page{\\n\\n  background-color: #3374BC;\\n   height: 2000px; \\n   width: 100%; \\n   overflow: hidden;\\n    position: fixed; \\n    margin: 0;\\n   padding: 0;\\n\\n}\\n\\n.thingToDo{\\n\\n  margin-bottom: 80px;\\n   margin-top:80px\\n   ;margin-left: 80px;\\n   height:50px;\\n   width: 200px;\\n\\n}\\n\\n.list-type5{\\n  width:410px;\\n  margin:0 auto;\\n  }\\n\\n.list-type5 ol {\\n  list-style-type: none;\\n  list-style-type: decimal ;\\n  margin: 0;\\n  margin-left: 1em;\\n  padding: 0;\\n  counter-reset: li-counter;\\n  }\\n\\n.list-type5 ol li{\\n  position: relative;\\n  margin-bottom: 1.5em;\\n  padding: 0.5em;\\n  background-color: #F0D756;\\n  padding-left: 58px;\\n  }\\n\\n.list-type5 a{\\n  text-decoration:none;\\n  color:black;\\n  font-size:15px;\\n  font-family: 'Raleway', sans-serif;\\n  }\\n\\n.list-type5 li:hover{\\n  box-shadow:inset -1em 0 #6CD6CC; \\n  transition: box-shadow 0.5s;\\n  }\\n\\n.list-type5 ol li:before {\\n  position: absolute;\\n  top: -0.3em;\\n  left: -0.5em;\\n  width: 1.8em;\\n  height: 1.2em;\\n  font-size: 2em;\\n  line-height: 1.2;\\n  font-weight: bold;\\n  text-align: center;\\n  color: white;\\n  background-color: #6CD6CC;\\n  transform: rotate(-20deg);\\n  -ms-transform: rotate(-20deg);\\n  -webkit-transform: rotate(-20deg);\\n  z-index: 99;\\n  overflow: hidden;\\n  content: counter(li-counter);\\n  counter-increment: li-counter;\\n  }\\n\\ninput {\\n    font-family: \\\"Roboto\\\", sans-serif;\\n    outline: 0;\\n    background: #f2f2f2;\\n    width: 100%;\\n    border: 0;\\n    margin: 0 0 15px;\\n    padding: 15px;\\n    box-sizing: border-box;\\n    font-size: 14px;\\n  }\\n\\n.add {\\n    font-family: \\\"Roboto\\\", sans-serif;\\n    text-transform: uppercase;\\n    outline: 0;\\n    background: #F0D756;\\n    width: 100px;\\n    border: 0;\\n    padding: 15px;\\n    color: #FFFFFF;\\n    font-size: 14px;\\n    transition: all 0.3 ease;\\n    cursor: pointer;\\n  }\\n\\n.done {\\n    font-family: \\\"Roboto\\\", sans-serif;\\n    outline: 0;\\n    background: #F0D756;\\n    text-transform: uppercase;\\n    width: 50px;\\n    border: 0;\\n    padding: 15px;\\n    color: #FFFFFF;\\n    font-size: 14px;\\n    transition: all 0.3 ease;\\n    cursor: pointer;\\n    float: right; \\n    margin-right: 30px;\\n     height: 1px; \\n     -webkit-transform: translateY(-8px); \\n             transform: translateY(-8px)\\n  }\"","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ToDoComponent } from './toDo.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ToDoComponent,\n    children: [\n\n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class ToDoRoutingModule {}\n","module.exports = \"\\n\\n<html class=\\\"page\\\" >\\n<div style=\\\"align-content: center;\\\">\\n  <button class=\\\"add\\\" (click)=\\\"logout()\\\">logout</button>\\n<div class=\\\"list-type5\\\">\\n  <form [formGroup]=\\\"dataForm\\\" #myform=\\\"ngForm\\\" (ngSubmit)=\\\"addTodo()\\\" >\\n    <input type=\\\"text\\\" formControlName=\\\"dataEntered\\\"  placeholder=\\\"Things To Do\\\" class=\\\"thingToDo\\\" />\\n    <button class=\\\"add\\\">add  </button>\\n  </form>\\n<ol>\\n    <li *ngFor=\\\"let todoItem of todoList\\\">\\n      {{ todoItem }}\\n      <button class=\\\"done\\\" (click)= done(todoItem) > Done </button>\\n    </li>\\n    \\n  </ol>\\n</div>\\n</div>  \\n</html> -->\"","import { Component, OnInit } from '@angular/core';\n\n\n\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {errorHandler} from \"@angular/platform-browser/src/browser\";\nimport {environment} from \"../../environments/environment\";\n\n@Component({\n  selector: 'app-toDo',\n    styleUrls:[\n          './styles.css'\n        ],\n  templateUrl:\"./toDo.component.html\"\n})\nexport class ToDoComponent implements OnInit {\n  dataForm = new FormGroup({\n    dataEntered: new FormControl(''),\n  });\nconfig = {\n    headers: {\n        'Content-Type': 'application/json'\n    }\n}\n  todoList = [];\n  constructor(private http: HttpClient,private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n\n\n     if(!(sessionStorage.getItem(\"username\"))){\n\n      this.router.navigateByUrl(\"/\");\n\n     }\n\n     this.http.get(\"/api/user/getToDo/\"+sessionStorage.getItem(\"username\"),this.config).subscribe(res => {\n\n       this.todoList=res[\"data\"][\"toDoList\"];\n       console.log(res[\"msg\"]);\n       console.log(res[\"data\"][\"toDoList\"]);\n  \n  \n  \n  },err =>{\n  \n  console.log((err[\"error\"][\"msg\"]));\n  \n  \n  });\n}\n\n\n\n\naddTodo(){\n var data ={\n\n    username: sessionStorage.getItem(\"username\") ,\n    dataEntered: this.dataForm.value[\"dataEntered\"]\n \n };\n  \n  this.http.post(\"/api/user/postToDo\",data,this.config).subscribe(res => {\n\n    this.router.navigateByUrl(\"/todolist\");\n  \n  \n  },err =>{\n  \n  console.log((err[\"error\"][\"msg\"]));\n  \n  \n  });\n\n\n\n}\n\n      done(x){\n\n        console.log(x);\n     \n        var data={\n          username: sessionStorage.getItem(\"username\"),\n          item:x\n\n       }\n        this.http.patch(\"/api/user/doneToDo\",data,this.config).subscribe(res => {\n\n          this.router.navigateByUrl(\"/todolist\");\n     \n     \n     \n     },err =>{\n     \n     console.log((err[\"error\"][\"msg\"]));\n     \n     \n     });\n\n        \n      }\n\nlogout(){\n\n  sessionStorage.clear();\n  this.router.navigateByUrl(\"/\");\n\n}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { ToDoRoutingModule } from './toDo-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ToDoComponent } from './toDo.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {CommonModule} from '@angular/common';\n@NgModule({\n  imports: [ToDoRoutingModule,\n      FormsModule,\n      CommonModule,\n      ReactiveFormsModule,\n      HttpClientModule],\n  declarations: [ToDoComponent],\n  entryComponents: [],\n  providers: []\n})\nexport class ToDoModule {}\n"],"sourceRoot":""}